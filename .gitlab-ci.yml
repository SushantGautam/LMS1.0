test:
  type: test
  
  variables:
      CC_TEST_REPORTER_ID : "1d4a80a1a569fc9f5ead16221e67b0fdabee9ff989b6c9b0f6acdee047f46242"
      PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
   
  before_script: 
  - "pip install virtualenv codacy-coverage"
  - "virtualenv ./../venv"
  - ". ./../venv/bin/activate"
  - "pip install -r requirements.txt"
  - "export CODACY_PROJECT_TOKEN=39b902b77813413692bc60f88399e7df"
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
   
  cache:
      paths:
        - .cache/pip
        - ./../venv/
  coverage: /^TOTAL.*\s+(\d+\%)$/
  image: "python:3.6"
  script:
  - "echo \"Running unit testsâ€¦\""
  - "python manage.py migrate --noinput"
  - "coverage run --source='.' manage.py test"
  - "coverage report"
  - "coverage xml"
  - "python-codacy-coverage -r coverage.xml"
  after_script:
  - ./cc-test-reporter after-build 
   

# production:
#   type: deploy
#   before_script:
#   - apt-get update -qq
#   - apt-get install -qq git
#   # Setup SSH deploy keys
#   - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#   - eval $(ssh-agent -s)
# #   - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
#   - ssh-add <(echo "$SSH_PRIVATE_KEY")
#   - ssh-keyscan -p 1022 210.127.211.100
#   - mkdir -p ~/.ssh
#   - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

#   script:
#     # - ssh ssh nsdev@210.127.211.100 -p 1022 "cd var/www/ && git checkout master && git pull origin master && exit"
#     - ssh nsdev@210.127.211.100 -p 1022 "echo cd"
#   only:
#     - master



##just rough for heroku use above
  # type: deploy
  # script:
  #   - apt-get update -qy
  #   - apt-get install -y ruby-dev
  #   - gem install dpl
  #   - dpl --provider=heroku --app=lms-nsdev --api-key=a201737c-1888-4a15-b5b6-f79c53978c85
  # only:
  #   - master
